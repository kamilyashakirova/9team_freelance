<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="exit_btn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YYcd/hem6XHGYu6cQwAAAABJRU5ErkJggg==
</value>
  </data>
</root>